{"version":3,"sources":["routes/api.ts","routes/atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","routes/Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","isDarkAtom","atom","key","default","Chart","coinId","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","item","x","time_close","slice","y","open","toFixed","high","low","close","options","theme","mode","chart","width","height","title","text","align","xaxis","labels","rotate","yaxis","tooltip","enabled","comeupAnimation","keyframes","Container","styled","div","Overview","main","Tag","h3","Value","Text","props","isPositive","checkValue","value","Price","tickersData","useState","setData","loading","setLoading","useEffect","quotes","USD","price","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","Header","header","Title","h1","accentColor","Loader","OverviewItem","Description","p","Tabs","Tab","span","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","Helmet","name","to","rank","symbol","description","total_supply","max_supply","path","CoinList","ul","li","cardBgColor","Img","img","Button","button","Coins","setDarkAtom","useSetRecoilState","console","log","onClick","prev","coin","pathname","id","src","toLowerCase","alt","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.d0207e29.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 4;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { atom } from 'recoil';\r\n\r\nexport const isDarkAtom = atom({\r\n  key: 'isDark',\r\n  default: true,\r\n});\r\n","import { useQuery } from 'react-query';\r\nimport { fetchCoinHistory } from './api';\r\nimport ApexChart from 'react-apexcharts';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { isDarkAtom } from './atoms';\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    ['ohlcv', coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  const arr = () =>\r\n    data?.map((item) => {\r\n      let x = item.time_close.slice(5, 10);\r\n      let y = [\r\n        item.open.toFixed(2),\r\n        item.high.toFixed(2),\r\n        item.low.toFixed(2),\r\n        item.close.toFixed(2),\r\n      ];\r\n      return { x: x, y: y };\r\n    });\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        'Loading chart...'\r\n      ) : (\r\n        <ApexChart\r\n          type='candlestick'\r\n          series={[\r\n            {\r\n              data: arr(),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? 'dark' : 'light',\r\n            },\r\n            chart: {\r\n              type: 'candlestick',\r\n              width: 1000,\r\n              height: 500,\r\n            },\r\n            title: {\r\n              text: `${coinId} Chart`,\r\n              align: 'left',\r\n            },\r\n            xaxis: {\r\n              type: 'datetime',\r\n              labels: { rotate: 0 },\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst comeupAnimation = keyframes`\r\n  0% {\r\n    transform: none;\r\n    opacity: 0;\r\n  }\r\n  1% {\r\n    transform: translateY(-5px);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  main:first-child {\r\n    animation-delay: 0.2s;\r\n  }\r\n  main:nth-child(2) {\r\n    animation-delay: 0.4s;\r\n  }\r\n  main:nth-child(3) {\r\n    animation-delay: 0.6s;\r\n  }\r\n  main:nth-child(4) {\r\n    animation-delay: 0.8s;\r\n  }\r\n  main:nth-child(5) {\r\n    animation-delay: 1s;\r\n  }\r\n  main:last-child {\r\n    animation-delay: 1.2s;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.main`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: white;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 15px;\r\n  margin: 10px 0;\r\n  padding: 20px;\r\n  transform: translateY(-5px);\r\n  opacity: 0;\r\n  animation: ${comeupAnimation} 0.5s linear forwards;\r\n`;\r\n\r\nconst Tag = styled.h3`\r\n  width: 50%;\r\n  color: black;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Value = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst Text = styled.h3<{ isPositive?: Boolean }>`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => (props.isPositive ? 'lightgreen' : 'red')};\r\n`;\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\ninterface PriceProps {\r\n  coinId: string;\r\n  tickersData?: PriceData;\r\n}\r\nfunction checkValue(value: number | undefined) {\r\n  if (value) {\r\n    return value > 0;\r\n  }\r\n}\r\nfunction Price({ coinId, tickersData }: PriceProps) {\r\n  const [data, setData] = useState<PriceData>();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    setData(tickersData);\r\n    setLoading(false);\r\n  }, [coinId, tickersData]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        'Loading Price...'\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <Tag>Price :</Tag>\r\n            <Value>\r\n              <Text isPositive={true}>\r\n                $ {data?.quotes.USD.price.toFixed(3)}\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n          <Overview>\r\n            <Tag> Max Change rate in last 24h:</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.market_cap_change_24h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.market_cap_change_24h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> Change rate (last 30 Minutes):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_30m) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_30m} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> Change rate (last 1 hours):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_1h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_1h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> Change rate (last 12 hours):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_12h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_12h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> Change rate (last 24 hours):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_24h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_24h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { useQuery } from 'react-query';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { fetchCoinInfo, fetchCoinTickers } from './api';\r\nimport Chart from './Chart';\r\nimport Price from './Price';\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface ICoinProps {}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch('/:coinId/price');\r\n  const chartMatch = useRouteMatch('/:coinId/chart');\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    ['info', coinId],\r\n    () => fetchCoinInfo(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    ['tickers', coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Link to='/'>\r\n          <Title>\r\n            {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\r\n          </Title>\r\n        </Link>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price coinId={coinId} tickersData={tickersData} />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { Helmet } from 'react-helmet';\r\nimport { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport styled from 'styled-components';\r\nimport { fetchCoins } from './api';\r\nimport { isDarkAtom } from './atoms';\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst CoinList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  transition: color;\r\n  border: 1px solid white;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  position: absolute;\r\n  right: 0;\r\n  box-shadow: 0px 1px 0px 0px #1c1b18;\r\n  background: linear-gradient(to bottom, #eae0c2 5%, #ccc2a6 100%);\r\n  background-color: #eae0c2;\r\n  border-radius: 15px;\r\n  border: 2px solid #333029;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  color: #505739;\r\n  font-family: Arial;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  text-shadow: 0px 1px 0px #ffffff;\r\n  &:hover {\r\n    background: linear-gradient(to bottom, #ccc2a6 5%, #eae0c2 100%);\r\n    background-color: #ccc2a6;\r\n  }\r\n`;\r\n\r\ninterface ICoinsProps {}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\r\n  console.log(setDarkAtom);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n        <Button onClick={toggleDarkAtom}>\r\n          {useRecoilValue(isDarkAtom) ? 'Light' : 'Dark'} Mode\r\n        </Button>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt=''\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Coin from './Coin';\r\nimport Coins from './Coins';\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path='/:coinId'>\r\n          <Coin />\r\n        </Route>\r\n        <Route path='/'>\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: '#2f3640',\r\n  textColor: 'white',\r\n  accentColor: '#9c88ff',\r\n  cardBgColor: 'transparent',\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: 'whitesmoke',\r\n  textColor: 'black',\r\n  accentColor: '#9c88ff',\r\n  cardBgColor: 'white',\r\n};\r\n","import { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport Router from './routes/Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { lightTheme, darkTheme } from './theme';\nimport { useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { isDarkAtom } from './routes/atoms';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n*{\n  box-sizing: border-box;\n}\nbody{\n\tfont-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n\tline-height: 1.2;\n}\na{\n  text-decoration: none;\n\tcolor:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}